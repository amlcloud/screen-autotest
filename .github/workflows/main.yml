name: Run cypress Tests
on:
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone another repository
        uses: actions/checkout@v2
        with:
          repository: amlcloud/screensite
          ref: main
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Print Current Working Directory
        run: |
          echo "Current Working Directory:"
          pwd
          ls -lrt
      - name: Debug Output
        run: |
          echo "Current Working Directory:"
          pwd
          echo "List of Files and Directories:"
          ls -lrt
      - run: flutter pub get
  #     - run: flutter test
      # - run: flutter build web
      - name: Build Flutter web
        run: flutter build web --release --web-renderer html --dart-define=FLUTTER_WEB_USE_SKIA=true

      # - name: Start HTTP server
      #   run: nohup npx http-server build/web -p 8080 &
      # - name: Start HTTP server
      #   id: start_server
      #   run: |
      #     nohup npx http-server build/web -p 8080 &
      #     echo "server_url=http://localhost:8080" >> $GITHUB_ENV
      - name: Archive web build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: web-build
          path: build/web


      # - name: Set up Chrome
      #   uses: browser-actions/setup-chrome@v1

      # - name: Start Flutter app
      #   id: start-app
      #   run: |
      #     # Start the Flutter app in Chrome and capture the output, including the assigned port number
      #     OUTPUT=$(flutter run -d chrome) # Use '--web-port=0' to assign a random available port
      #     echo "$OUTPUT" # Output contains the assigned port number and other information

      #     # Extract the assigned port number using regular expression
      #     PORT=$(echo "$OUTPUT" | grep -oP 'http://localhost:\K\d+')
      #     echo "::set-output name=port::$PORT"

  test:
    needs: build  # Wait for the 'build' job to complete before starting this job
    runs-on: ubuntu-latest

    steps:
      - name: Start HTTP server
        id: start_server
        run: |
          nohup npx http-server build/web -p 8080 &
          echo "server_url=http://localhost:8080" >> $GITHUB_ENV
       # Wait for 5 seconds
      - name: Wait for 5 seconds
        run: sleep 15

      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Create Destination Directory for JSONs
      #   run: mkdir -p /home/runner/work/screen-autotest/screen-autotest/cypress/reports/html

      - name: Concatenate paths
        run: |
          # Concatenate paths using ${{ github.workspace }} (current working directory)
          concatenated_path="${{ github.workspace }}/cypress/reports"
          echo "Concatenated path: $concatenated_path"
      
      
      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests
        run: npx cypress run --browser chrome --env -e2e
        continue-on-error: true # Proceed even if the tests fail
      - name: Upload test reports
        if: always() # Upload artifacts regardless of test outcome
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: "${{ github.workspace }}/cypress/reports"

      - name: Upload coverage reports
        if: always() # Upload artifacts regardless of test outcome
        uses: actions/upload-artifact@v2
        with:
          name: coverage-reports
          path: "${{ github.workspace }}/cypress/reports"
      - name: Check test results
        id: test-results
        run: echo "::set-output name=status::$(npx cypress run --browser chrome --ci | grep -oP 'All specs passed!|\d+ failing')"

      - name: Set pull request status
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          STATUS="${{ steps.test-results.outputs.status }}"
          ACCESS_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          REPO_NAME="${{ github.repository }}"

          API_URL="https://api.github.com/repos/$REPO_NAME/check-runs"
          API_HEADERS="Accept: application/vnd.github.antiope-preview+json"
          DATA="{\"name\": \"Cypress Tests\", \"head_sha\": \"${{ github.sha }}\", \"status\": \"$STATUS\", \"output\": {\"title\": \"Cypress Tests\", \"summary\": \"Cypress tests $STATUS\"}}"

          curl -s -X POST $API_URL/$API_ENDPOINT \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "$API_HEADERS" \
            -d "$DATA"

          exit 0
      
